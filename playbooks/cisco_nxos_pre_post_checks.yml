- name: Cisco NXOS Perform Pre- or Post-Checks
  gather_facts: no
  hosts: "{{ host_group}}"

  tasks:

    - name: get hostname
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ hostname_command | default('show hostname') }}"          
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: show config-diff
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ diff_command | default('show running-config diff') }}"          
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: show interface status
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ interface_status_command | default('show interface status') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: check for current err-disabled interfaces
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ err_disabled_command | default('show interface status err-disabled') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: check for previous err-disabled interfaces
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ logging_command | default('show logging last 9999 | grep \"err-disable\\|BPDU\"') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: view blocked ports
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ stp_blocked_ports_command | default('show spanning-tree blockedports') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get VPC domain state
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ vpc_state_command | default('show vpc brief | begin \"vPC domain id\" | end \"vPC Peer-link status\"') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get VPC status
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ vpc_status_command | default('show vpc brief | begin \"vPC status\"') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: check VPC consistency parameters
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ vpc_consistency_command | default('show vpc consistency-parameters global | grep \"Local suspended\"') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: view VPC peer-keepalive
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ vpc_keepalive_command | default('show vpc peer-keepalive | grep -v \"ms\\|msec\"') }}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get the ARP table on remote devices
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ get_arp_table_command | default('show ip arp vrf all | begin \"MAC Address\"')}}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('60') }}"

    - name: get the CAM table on remote devices
      connection: network_cli
      cisco.nxos.nxos_command:
        commands: "{{ get_cam_table_command | default('show mac address-table | begin \"MAC Address\"')}}"
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('60') }}"