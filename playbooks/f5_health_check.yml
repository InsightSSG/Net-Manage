- name: F5 Health Check
  hosts: "{{ host_group }}"
  gather_facts: no

  tasks:

    - name: get sync status
      f5networks.f5_modules.bigip_command:
        commands:
          # - show cm sync-status | grep Status | grep -v CM
          - "{{ sync_status }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: get sys version
      f5networks.f5_modules.bigip_command:
        commands:
          # - show sys version | grep Version | grep -v Sys
          - "{{ sys_version }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: show net interface
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ show_net_interface }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: list net interface
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ list_net_interface }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: get number of VIPs
      f5networks.f5_modules.bigip_command:
        commands:
          # - list ltm virtual /*/* | grep -c "ltm virtual"
          - "{{ total_vips }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: get VIP availability
      f5networks.f5_modules.bigip_command:
        commands:
          # - ltm virtual | grep "Ltm::\|Availability"
          - "{{ vip_availability }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: get number of available VIPs
      f5networks.f5_modules.bigip_command:
        commands:
          # - show ltm virtual /*/* | grep Availability | grep -c available
          - "{{ available_vips }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        parser: generic

    - name: get number of active pool members
      f5networks.f5_modules.bigip_command:
        commands:
          # - show ltm pool /*/* | grep "Current Active Members"
          - "{{ active_pool_members }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost

    - name: get pool member availability
      f5networks.f5_modules.bigip_command:
        commands:
          # - show ltm virtual | grep -c Availability
          - "{{ pool_member_availability }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost

    - name: get ARP table
      f5networks.f5_modules.bigip_command:
        commands:
          # - show net arp | grep -v "\-\-\-\|Net::Arp\|HWaddress"
          - "{{ get_arp_table }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost


    - name: get CAM table
      f5networks.f5_modules.bigip_command:
        commands:
          # - show sys mac-address | grep "mac-address"
          - "{{ get_cam_table }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost