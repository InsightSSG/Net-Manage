- name: F5 Health Check
  hosts: "{{ host_group }}"
  gather_facts: no

  tasks:

    - name: show hostname
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ show_hostname | default('list sys global-settings hostname | grep hostname') }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get sync status
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ sync_status | default('show cm sync-status | grep Status | grep -v CM') }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get sys version
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ sys_version | default('show sys version | grep Version | grep -v Sys') }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: show net interface
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ show_net_interface }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: list net interface
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ list_net_interface }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get number of VIPs
      f5networks.f5_modules.bigip_command:
        commands:
          # - list ltm virtual /*/* | grep -c "ltm virtual"
          - "{{ total_vips }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get VIP availability
      f5networks.f5_modules.bigip_command:
        commands:
          # - ltm virtual | grep "Ltm::\|Availability"
          - "{{ vip_availability }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get number of available VIPs
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ available_vips | default('show ltm virtual /*/* | grep Availability | grep -c available') }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get VIP destinations
      f5networks.f5_modules.bigip_command:
        commands:
          - "{{ vip_destinations | default('show ltm virtual | grep \"Virtual Server\\|Availability\\|Destination\"') }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get number of active pool members
      f5networks.f5_modules.bigip_command:
        commands:
          # - show ltm pool /*/* | grep "Current Active Members"
          - "{{ active_pool_members }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get pool member availability
      f5networks.f5_modules.bigip_command:
        commands:
          # - show ltm virtual | grep -c Availability
          - "{{ pool_member_availability }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get ARP table
      f5networks.f5_modules.bigip_command:
        commands:
          # - show net arp | grep -v "\-\-\-\|Net::Arp\|HWaddress"
          - "{{ get_arp_table }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    - name: get CAM table
      f5networks.f5_modules.bigip_command:
        commands:
          # - show sys mac-address | grep "mac-address"
          - "{{ get_cam_table }}"
        provider:
          user: "{{ user }}"
          server: "{{ ansible_host }}"
          password: "{{ password }}"
          server_port: "{{ ansible_port | default('443') }}"
          validate_certs: "{{ validate_certs | default('yes') }}"
      delegate_to: localhost
      vars:
        ansible_command_timeout: "{{ ansible_timeout | default('30') }}"

    # - name: get iRules
    #   f5networks.f5_modules.bigip_command:
    #     commands:
    #       # - show sys mac-address | grep "mac-address"
    #       # - "{{ get_irules | default('list ltm rule /*/*') }}"
    #       - "{{ get_irules }}"
    #     provider:
    #       user: "{{ user }}"
    #       server: "{{ ansible_host }}"
    #       password: "{{ password }}"
    #       server_port: "{{ ansible_port | default('443') }}"
    #       validate_certs: "{{ validate_certs | default('yes') }}"
    #   delegate_to: localhost
    #   vars:
    #     ansible_command_timeout: "{{ ansible_timeout | default('30') }}"
